"use client";

import {
  useState,
  useEffect,
  useMemo,
  useRef,
  useCallback,
  type FormEvent,
  type ComponentPropsWithoutRef,
} from "react";
import Image from "next/image";
import { motion } from "framer-motion";
import CountUp from "react-countup";
import InputMask from "react-input-mask";
import { Swiper, SwiperSlide } from "swiper/react";
import { Autoplay, Navigation, Pagination } from "swiper/modules";
import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";

const services = [
  {
    id: 1,
    title: "–í—ã–≤–æ–¥ –∏–∑ –∑–∞–ø–æ—è",
    price: "–æ—Ç 2 900 ‚ÇΩ",
    icon: "üíä",
    description:
      "–ë—ã—Å—Ç—Ä–æ —Å–Ω–∏–º–∞–µ–º —Ç–æ–∫—Å–∏—á–µ—Å–∫—É—é –Ω–∞–≥—Ä—É–∑–∫—É, –ø–æ–¥–±–∏—Ä–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –∏ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–∞–µ–º –ø–∞—Ü–∏–µ–Ω—Ç–∞ –¥–æ —Å—Ç–∞–±–∏–ª–∏–∑–∞—Ü–∏–∏.",
  },
  {
    id: 2,
    title: "–°–Ω—è—Ç–∏–µ –ø–æ—Ö–º–µ–ª—å—è",
    price: "–æ—Ç 2 000 ‚ÇΩ",
    icon: "üöë",
    description:
      "–î–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏—è, –≤–∏—Ç–∞–º–∏–Ω—ã, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–µ—Ä–¥—Ü–∞ –∏ –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã. –ü–æ–º–æ–≥–∞–µ–º –≤–µ—Ä–Ω—É—Ç—å –±–æ–¥—Ä–æ—Å—Ç—å –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å.",
  },
  {
    id: 3,
    title: "–ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ",
    price: "–æ—Ç 4 900 ‚ÇΩ",
    icon: "üõ°Ô∏è",
    description:
      "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–æ–¥—ã –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ –ª–∏—Ü–µ–Ω–∑–∏–∏ –ú–∏–Ω–∑–¥—Ä–∞–≤–∞. –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ 24/7.",
  },
];

const emergencyPoints = [
  "–í—ã–µ–∑–¥ –≤—Ä–∞—á–∞ –∫ –≤–∞–º –¥–æ–º–æ–π –∏–ª–∏ –≤ –æ—Ñ–∏—Å",
  "–ü—Ä–∏–µ–¥–µ–º –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç",
  "–†–∞–±–æ—Ç–∞–µ–º –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö –∏ –ø—Ä–∞–∑–¥–Ω–∏–∫–æ–≤",
];

const advantages = [
  {
    icon: "üöë",
    title: "–í—ã–µ–∑–¥ –∑–∞ 30 –º–∏–Ω—É—Ç",
    description: "–ë—Ä–∏–≥–∞–¥–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Å—Ç–∞—Ä—Ç—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–≤–æ–Ω–∫–∞",
  },
  {
    icon: "ü§´",
    title: "–ü–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å",
    description: "–î–æ–∫—É–º–µ–Ω—Ç—ã –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º",
  },
  {
    icon: "üí≥",
    title: "–ß–µ—Å—Ç–Ω—ã–µ —Ü–µ–Ω—ã",
    description: "–§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å, –±–µ–∑ —Å–∫—Ä—ã—Ç—ã—Ö –¥–æ–ø–ª–∞—Ç",
  },
  {
    icon: "üë®‚Äç‚öïÔ∏è",
    title: "–û–ø—ã—Ç–Ω—ã–µ –≤—Ä–∞—á–∏",
    description: "–í—Å–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã —Å –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã–º –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º –∏ —Å—Ç–∞–∂–µ–º –æ—Ç 10 –ª–µ—Ç",
  },
];

const modalBenefits = [
  "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ª–µ—á–µ–Ω–∏—è",
  "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—é",
  "–ü–æ–¥–±–æ—Ä –∫–∞–ø–µ–ª—å–Ω–∏—Ü –∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤",
  "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7",
];

const reviews = [
  {
    id: 1,
    city: "–ú–æ—Å–∫–≤–∞",
    name: "–ê–Ω–¥—Ä–µ–π –ú.",
    text: "–í—Ä–∞—á –ø—Ä–∏–µ—Ö–∞–ª —á–µ—Ä–µ–∑ 25 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –∑–≤–æ–Ω–∫–∞. –í—Å—ë —Å–¥–µ–ª–∞–ª–∏ –æ—á–µ–Ω—å –¥–µ–ª–∏–∫–∞—Ç–Ω–æ, –æ–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º!",
  },
  {
    id: 2,
    city: "–°–ü–ë",
    name: "–ú–∞—Ä–∏—è –ö.",
    text: "–í—ã—Ä–∞–∂–∞—é –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ –ø–æ–º–æ—â—å –æ—Ç—Ü—É. –î–æ–∫—Ç–æ—Ä –±—ã–ª –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω –∏ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –æ–±—ä—è—Å–Ω–∏–ª –≤—Å–µ –¥–µ–π—Å—Ç–≤–∏—è.",
  },
  {
    id: 3,
    city: "–ö–∞–∑–∞–Ω—å",
    name: "–î–º–∏—Ç—Ä–∏–π –ü.",
    text: "–ù–µ –æ–∂–∏–¥–∞–ª —Ç–∞–∫–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏: –ø—Ä–∏–µ—Ö–∞–ª–∏ —á–µ—Ä–µ–∑ –ø–æ–ª—á–∞—Å–∞, —Å–æ—Å—Ç–æ—è–Ω–∏–µ —É–ª—É—á—à–∏–ª–æ—Å—å —É–∂–µ —á–µ—Ä–µ–∑ —á–∞—Å. –†–µ–∫–æ–º–µ–Ω–¥—É—é!",
  },
  {
    id: 4,
    city: "–ú–æ—Å–∫–≤–∞",
    name: "–ï–ª–µ–Ω–∞ –°.",
    text: "–í—ã–∑—ã–≤–∞–ª–∏ –≤—Ä–∞—á–∞ –¥–ª—è –º—É–∂–∞ –≥–ª—É–±–æ–∫–æ–π –Ω–æ—á—å—é. –í—Å—ë –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ, —Å–ø–æ–∫–æ–π–Ω–æ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏–≤–Ω–æ.",
  },
  {
    id: 5,
    city: "–°–ü–ë",
    name: "–í–ª–∞–¥–∏–º–∏—Ä –¢.",
    text: "–û—á–µ–Ω—å –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏ —á–µ–ª–æ–≤–µ—á–Ω—ã–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã. –¶–µ–Ω—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –∫–∞—á–µ—Å—Ç–≤—É.",
  },
  {
    id: 6,
    city: "–ö–∞–∑–∞–Ω—å",
    name: "–û–ª—å–≥–∞ –ù.",
    text: "–ì–ª–∞–≤–Ω–æ–µ –¥–ª—è –Ω–∞—Å –±—ã–ª–∞ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å ‚Äî –≤—Å–µ –ø—Ä–æ—à–ª–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.",
  },
  {
    id: 7,
    city: "–ú–æ—Å–∫–≤–∞",
    name: "–°–µ—Ä–≥–µ–π –ë.",
    text: "–í—ã—Ä—É—á–∞–ª–∏ –º–µ–Ω—è —É–∂–µ –¥–≤–∞–∂–¥—ã. –í—Å–µ–≥–¥–∞ –±—ã—Å—Ç—Ä–æ, —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ –ø–∞—Ü–∏–µ–Ω—Ç—É –∏ –µ–≥–æ –±–ª–∏–∑–∫–∏–º.",
  },
  {
    id: 8,
    city: "–°–ü–ë",
    name: "–ù–∞—Ç–∞–ª—å—è –õ.",
    text: "–°–ø–∞—Å–ª–∏ —Å—ã–Ω–∞ –ø–æ—Å–ª–µ —Ç—è–∂–µ–ª–æ–≥–æ –∑–∞–ø–æ—è. –ó–∞ —ç—Ç–æ –æ–≥—Ä–æ–º–Ω–æ–µ —Å–ø–∞—Å–∏–±–æ –≤—Å–µ–º—É –∫–æ–ª–ª–µ–∫—Ç–∏–≤—É —Å–ª—É–∂–±—ã.",
  },
  {
    id: 9,
    city: "–ö–∞–∑–∞–Ω—å",
    name: "–ò–≥–æ—Ä—å –§.",
    text: "–í—Å—ë –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å: –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ, –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ—Å—Ç—å, —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ. –ë—É–¥—É —Ä–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞—Ç—å.",
  },
  {
    id: 10,
    city: "–ú–æ—Å–∫–≤–∞",
    name: "–ê–Ω–Ω–∞ –í.",
    text: "–û—á–µ–Ω—å –≤—ã—Ä—É—á–∏–ª–∏. –ü–µ—Ä–µ–∑–≤–æ–Ω–∏–ª–∏ —Å—Ä–∞–∑—É, –ø–æ–º–æ–≥–ª–∏ –∏ –≤—Å—ë –æ–±—ä—è—Å–Ω–∏–ª–∏. –°–æ—Ö—Ä–∞–Ω—é –∫–æ–Ω—Ç–∞–∫—Ç—ã –Ω–∞ –±—É–¥—É—â–µ–µ.",
  },
];

const proofItems = [
  { icon: "üöë", title: "30 –º–∏–Ω", description: "–í—Ä–µ–º—è –ø—Ä–∏–µ–∑–¥–∞" },
  { icon: "ü§´", title: "100%", description: "–ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å" },
  { icon: "üíä", title: "–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã", description: "–ú–∏–Ω–∑–¥—Ä–∞–≤ –†–§" },
  { icon: "üí∞", title: "–ü—Ä–æ–∑—Ä–∞—á–Ω—ã–µ —Ü–µ–Ω—ã", description: "–ë–µ–∑ –¥–æ–ø–ª–∞—Ç" },
  { icon: "üë®‚Äç‚öïÔ∏è", title: "10+ –ª–µ—Ç", description: "–û–ø—ã—Ç —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤" },
  { icon: "‚òéÔ∏è", title: "24/7", description: "–°–≤—è–∑—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞" },
];

const timeline = [
  { step: "1", title: "–ó–∞—è–≤–∫–∞", description: "–í—ã –æ—Å—Ç–∞–≤–ª—è–µ—Ç–µ –∑–∞—è–≤–∫—É –∏–ª–∏ –∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º" },
  { step: "2", title: "–ó–≤–æ–Ω–æ–∫", description: "–í—Ä–∞—á —Å–≤—è–∑—ã–≤–∞–µ—Ç—Å—è –∏ —É—Ç–æ—á–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ" },
  { step: "3", title: "–í—ã–µ–∑–¥", description: "–ë—Ä–∏–≥–∞–¥–∞ –ø—Ä–∏–µ–∑–∂–∞–µ—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç" },
  { step: "4", title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞", description: "–ù–µ –æ—Å—Ç–∞–≤–ª—è–µ–º –≤–∞—Å –æ–¥–Ω–∏—Ö –ø–æ—Å–ª–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã" },
];

const cityFilters = ["–í—Å–µ", "–ú–æ—Å–∫–≤–∞", "–°–ü–ë", "–ö–∞–∑–∞–Ω—å"] as const;

const HERO_IMAGE_SRC =
  "https://images.unsplash.com/photo-1580281658629-73a96f2a9aa5?auto=format&fit=crop&w=900&q=80";

function normalizePhone(value: string) {
  return value.replace(/\D/g, "");
}

export default function HomePage() {
  const [cityFilter, setCityFilter] = useState<(typeof cityFilters)[number]>("–í—Å–µ");
  const [showPopup, setShowPopup] = useState(false);
  const [showTimer, setShowTimer] = useState(false);
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [cursorPosition, setCursorPosition] = useState({ x: 50, y: 50 });

  const [name, setName] = useState("");
  const [phone, setPhone] = useState("");
  const [primaryMessage, setPrimaryMessage] = useState<string | null>(null);
  const [primaryError, setPrimaryError] = useState<string | null>(null);

  const [namePopup, setNamePopup] = useState("");
  const [phonePopup, setPhonePopup] = useState("");
  const [popupMessage, setPopupMessage] = useState<string | null>(null);
  const [popupError, setPopupError] = useState<string | null>(null);

  const [modalName, setModalName] = useState("");
  const [modalPhone, setModalPhone] = useState("");
  const [modalMessage, setModalMessage] = useState<string | null>(null);
  const [modalError, setModalError] = useState<string | null>(null);

  const [mapVisible, setMapVisible] = useState(false);

  const inactivityTimerRef = useRef<ReturnType<typeof setTimeout> | null>(null);
  const mapRef = useRef<HTMLDivElement | null>(null);

  useEffect(() => {
    let rafId: number | null = null;
    const handleMouseMove = (event: MouseEvent) => {
      if (rafId) cancelAnimationFrame(rafId);
      rafId = requestAnimationFrame(() => {
        setCursorPosition({
          x: (event.clientX / window.innerWidth) * 100,
          y: (event.clientY / window.innerHeight) * 100,
        });
      });
    };

    window.addEventListener("mousemove", handleMouseMove);
    return () => {
      if (rafId) cancelAnimationFrame(rafId);
      window.removeEventListener("mousemove", handleMouseMove);
    };
  }, []);

  useEffect(() => {
    const popupTimer = setTimeout(() => setShowPopup(true), 30000);
    return () => clearTimeout(popupTimer);
  }, []);

  const resetInactivityTimer = useCallback(() => {
    if (inactivityTimerRef.current) {
      clearTimeout(inactivityTimerRef.current);
    }
    inactivityTimerRef.current = setTimeout(() => setShowTimer(true), 15 * 60 * 1000);
  }, []);

  useEffect(() => {
    const events: (keyof WindowEventMap)[] = ["mousemove", "keydown", "scroll", "touchstart"];
    events.forEach((event) => window.addEventListener(event, resetInactivityTimer));
    resetInactivityTimer();

    return () => {
      events.forEach((event) => window.removeEventListener(event, resetInactivityTimer));
      if (inactivityTimerRef.current) {
        clearTimeout(inactivityTimerRef.current);
      }
    };
  }, [resetInactivityTimer]);

  useEffect(() => {
    if (!mapRef.current) return;

    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            setMapVisible(true);
            observer.disconnect();
          }
        });
      },
      { threshold: 0.3 }
    );

    observer.observe(mapRef.current);
    return () => observer.disconnect();
  }, []);

  const filteredReviews = useMemo(() => {
    if (cityFilter === "–í—Å–µ") {
      return reviews;
    }

    return reviews.filter((review) => review.city === cityFilter);
  }, [cityFilter]);

  const handlePrimarySubmit = (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    const digits = normalizePhone(phone);

    if (!name.trim()) {
      setPrimaryError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à–µ –∏–º—è");
      setPrimaryMessage(null);
      return;
    }

    if (digits.length !== 11) {
      setPrimaryError("–£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞");
      setPrimaryMessage(null);
      return;
    }

    setPrimaryError(null);
    setPrimaryMessage("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω—É—Ç.");
    setName("");
    setPhone("");
  };

  const handlePopupSubmit = (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    const digits = normalizePhone(phonePopup);

    if (!namePopup.trim()) {
      setPopupError("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è");
      setPopupMessage(null);
      return;
    }

    if (digits.length !== 11) {
      setPopupError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é");
      setPopupMessage(null);
      return;
    }

    setPopupError(null);
    setPopupMessage("–ì–æ—Ç–æ–≤–æ! –ú—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω—É—Ç.");
    setNamePopup("");
    setPhonePopup("");
  };

  const handleModalSubmit = (event: FormEvent<HTMLFormElement>) => {
    event.preventDefault();
    const digits = normalizePhone(modalPhone);

    if (!modalName.trim()) {
      setModalError("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è");
      setModalMessage(null);
      return;
    }

    if (digits.length !== 11) {
      setModalError("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞");
      setModalMessage(null);
      return;
    }

    setModalError(null);
    setModalMessage("–ü–ª–∞–Ω –ª–µ—á–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω! –ù–∞—à —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç —Å–≤—è–∂–µ—Ç—Å—è —Å –≤–∞–º–∏.");
    setModalName("");
    setModalPhone("");
  };

  return (
    <>
      <div
        aria-hidden
        className="pointer-events-none fixed inset-0 -z-10 opacity-90 transition-colors duration-500"
        style={{
          background: `radial-gradient(600px circle at ${cursorPosition.x}% ${cursorPosition.y}%, rgba(0, 200, 179, 0.12), transparent 75%)`,
        }}
      />

      {/* Hero */}
      <section
        id="hero"
        className="relative overflow-hidden px-4 pb-20 pt-24 md:pb-28 md:pt-28 lg:px-8"
      >
        <div className="absolute inset-0 bg-gradient-to-br from-white via-primary/10 to-white" />
        <div className="relative mx-auto flex max-w-7xl flex-col gap-12 lg:flex-row lg:items-center">
          <motion.div
            className="max-w-2xl"
            initial={{ opacity: 0, y: 24 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <p className="mb-4 inline-flex items-center gap-2 rounded-full border border-primary/40 bg-white/80 px-4 py-2 text-sm font-semibold text-primary">
              <span className="text-base">‚ö°</span>
              –í—ã–µ–∑–¥ –≤—Ä–∞—á–∞ –Ω–∞ –¥–æ–º –∑–∞ 30 –º–∏–Ω—É—Ç
            </p>
            <h1 className="mb-6 font-display text-4xl font-extrabold leading-tight text-text md:text-5xl lg:text-6xl">
              –í–´–ó–û–í –ù–ê–†–ö–û–õ–û–ì–ê –ù–ê –î–û–ú –ó–ê 30 –ú–ò–ù–£–¢ ‚Äî –ö–†–£–ì–õ–û–°–£–¢–û–ß–ù–û –ò –ê–ù–û–ù–ò–ú–ù–û
            </h1>
            <p className="mb-8 max-w-xl text-lg text-text md:text-xl">
              –í—ã–≤–æ–¥ –∏–∑ –∑–∞–ø–æ—è, —Å–Ω—è—Ç–∏–µ –ø–æ—Ö–º–µ–ª—å—è –∏ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ. –ß–∞—Å—Ç–Ω–∞—è —Å–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å 24/7. –ú—ã –ø—Ä–∏–µ–¥–µ–º –∫ –≤–∞–º –¥–æ–º–æ–π,
              —Å–æ—Ö—Ä–∞–Ω–∏–º –ø–æ–ª–Ω—É—é –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–º –Ω–∞ –≤—Å–µ—Ö —ç—Ç–∞–ø–∞—Ö –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è.
            </p>
            <div className="flex flex-col gap-4 sm:flex-row">
              <a
                href="tel:+78000000000"
                className="animate-pulse-soft inline-flex items-center justify-center rounded-lg bg-primary px-8 py-4 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg hover:opacity-95"
              >
                –í—ã–∑–≤–∞—Ç—å –≤—Ä–∞—á–∞ —Å–µ–π—á–∞—Å
              </a>
              <a
                href="#consultation"
                className="inline-flex items-center justify-center rounded-lg border-2 border-primary bg-white px-8 py-4 font-display text-base font-semibold text-primary transition-all hover:bg-primary hover:text-white hover:shadow-primary-sm"
              >
                –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ
              </a>
            </div>
            <div className="mt-10 grid gap-6 sm:grid-cols-3">
              <div className="rounded-2xl bg-white/80 p-5 text-center shadow-soft backdrop-blur">
                <div className="text-3xl font-bold text-primary">
                  <CountUp end={24} suffix="/7" />
                </div>
                <p className="text-sm text-muted">–†–∞–±–æ—Ç–∞–µ–º –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω–æ</p>
              </div>
              <div className="rounded-2xl bg-white/80 p-5 text-center shadow-soft backdrop-blur">
                <div className="text-3xl font-bold text-primary">10+ –ª–µ—Ç</div>
                <p className="text-sm text-muted">–û–ø—ã—Ç –Ω–∞—à–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤</p>
              </div>
              <div className="rounded-2xl bg-white/80 p-5 text-center shadow-soft backdrop-blur">
                <div className="text-3xl font-bold text-primary">100%</div>
                <p className="text-sm text-muted">–ê–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞</p>
              </div>
            </div>
          </motion.div>

          <motion.div
            className="relative w-full max-w-xl self-center rounded-3xl bg-white/0"
            initial={{ opacity: 0, scale: 0.95 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.8, delay: 0.2 }}
          >
            <div className="absolute -left-8 -top-8 h-40 w-40 rounded-full bg-primary/20 blur-3xl" aria-hidden />
            <div className="absolute -right-6 -bottom-8 h-52 w-52 rounded-full bg-primary/30 blur-3xl" aria-hidden />
            <div className="relative overflow-hidden rounded-[32px] shadow-2xl">
              <Image
                src={HERO_IMAGE_SRC}
                alt="–ù–∞—Ä–∫–æ–ª–æ–≥ –Ω–∞ –≤—ã–µ–∑–¥–µ"
                width={900}
                height={1200}
                priority
                className="h-full w-full object-cover"
                sizes="(min-width: 1024px) 480px, 100vw"
              />
              <div className="absolute inset-0 bg-gradient-to-t from-text/70 via-transparent to-transparent" aria-hidden />
              <div className="absolute bottom-6 left-6 right-6 rounded-2xl bg-white/85 p-4 shadow-soft backdrop-blur">
                <p className="font-display text-lg font-semibold text-text">–î–µ–∂—É—Ä–Ω–∞—è –±—Ä–∏–≥–∞–¥–∞ —É–∂–µ –≤ –ø—É—Ç–∏</p>
                <p className="text-sm text-muted">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—Ä–∏–±—ã—Ç–∏—è: 27 –º–∏–Ω—É—Ç</p>
              </div>
            </div>
          </motion.div>
        </div>
      </section>

      {/* Emergency CTA */}
      <section id="consultation" className="px-4 py-16 lg:px-8">
        <div className="mx-auto max-w-5xl rounded-3xl bg-white p-8 shadow-medium md:p-12">
          <div className="grid gap-10 md:grid-cols-[1.2fr_0.8fr] md:items-center">
            <div>
              <h2 className="mb-4 font-display text-3xl font-bold text-text md:text-4xl">–°—Ä–æ—á–Ω—ã–π –≤—ã–∑–æ–≤ –≤—Ä–∞—á–∞</h2>
              <p className="mb-6 text-lg text-text">
                –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –Ω–∞–º –æ —Å–∏—Ç—É–∞—Ü–∏–∏ ‚Äî –º—ã –ø–æ–¥–±–µ—Ä—ë–º –ø–æ–¥—Ö–æ–¥—è—â–µ–≥–æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞ –∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã –µ—â—ë
                –¥–æ –≤—ã–µ–∑–¥–∞.
              </p>
              <ul className="grid gap-2 text-sm text-muted">
                {emergencyPoints.map((point) => (
                  <li key={point} className="flex items-center gap-2">
                    <span className="text-lg text-primary">‚Ä¢</span>
                    <span>{point}</span>
                  </li>
                ))}
              </ul>
            </div>
            <div className="rounded-2xl border border-primary/20 bg-primary/5 p-6">
              <p className="mb-4 font-display text-lg font-semibold text-text">–ì–æ—Ä—è—á–∞—è –ª–∏–Ω–∏—è 24/7</p>
              <a
                href="tel:+78000000000"
                className="mb-6 flex items-center justify-center rounded-lg bg-primary px-6 py-4 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg hover:opacity-95"
              >
                üöë –ü–æ–∑–≤–æ–Ω–∏—Ç—å –¥–∏—Å–ø–µ—Ç—á–µ—Ä—É
              </a>
              <button
                type="button"
                onClick={() => setIsModalOpen(true)}
                className="w-full rounded-lg border-2 border-primary px-6 py-4 font-display text-base font-semibold text-primary transition-all hover:bg-primary hover:text-white"
              >
                –ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω –ª–µ—á–µ–Ω–∏—è
              </button>
            </div>
          </div>
        </div>
      </section>

      {/* Services */}
      <section id="services" className="bg-white px-4 py-20 lg:px-8">
        <div className="mx-auto max-w-7xl">
          <motion.h2
            className="mb-12 text-center font-display text-3xl font-bold text-text md:text-4xl"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            –ù–∞—à–∏ —É—Å–ª—É–≥–∏
          </motion.h2>
          <div className="hidden gap-6 md:grid md:grid-cols-3">
            {services.map((service, index) => (
              <motion.div
                key={service.id}
                className="group flex h-full flex-col rounded-2xl bg-elevated p-6 shadow-soft transition-all duration-300 hover:-translate-y-2 hover-glow-tiffany"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
              >
                <div className="mb-4 flex h-16 w-16 items-center justify-center rounded-xl bg-primary-100 text-4xl transition-all duration-300 group-hover:scale-110 group-hover:bg-primary group-hover:shadow-primary-md">
                  {service.icon}
                </div>
                <h3 className="mb-1 font-display text-xl font-semibold text-text">{service.title}</h3>
                <p className="mb-4 text-2xl font-bold text-primary">{service.price}</p>
                <p className="text-sm text-muted">{service.description}</p>
              </motion.div>
            ))}
          </div>

          <div className="md:hidden">
            <Swiper
              modules={[Pagination]}
              slidesPerView={1}
              spaceBetween={20}
              pagination={{ clickable: true }}
              className="pb-12"
            >
              {services.map((service) => (
                <SwiperSlide key={service.id}>
                  <div className="h-full rounded-2xl bg-elevated p-6 shadow-soft">
                    <div className="mb-4 flex h-16 w-16 items-center justify-center rounded-xl bg-primary-100 text-4xl">
                      {service.icon}
                    </div>
                    <h3 className="mb-1 font-display text-xl font-semibold text-text">{service.title}</h3>
                    <p className="mb-4 text-2xl font-bold text-primary">{service.price}</p>
                    <p className="text-sm text-muted">{service.description}</p>
                  </div>
                </SwiperSlide>
              ))}
            </Swiper>
          </div>
        </div>
      </section>

      {/* Danger of alcohol */}
      <section className="bg-text px-4 py-20 text-white lg:px-8">
        <div className="mx-auto max-w-4xl text-center">
          <motion.div
            initial={{ opacity: 0, scale: 0.95 }}
            whileInView={{ opacity: 1, scale: 1 }}
            viewport={{ once: true }}
            className="mb-10"
          >
            <div className="mb-4 font-display text-6xl font-bold text-primary md:text-7xl">
              <CountUp end={200} duration={2.4} suffix="+" />
            </div>
            <p className="font-display text-2xl">—á–µ–ª–æ–≤–µ–∫ —É–º–∏—Ä–∞–µ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ</p>
          </motion.div>
          <p className="mx-auto max-w-3xl text-lg text-white/85">
            –ö–∞–∂–¥—ã–π –¥–µ–Ω—å –æ—Ç –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π –∞–ª–∫–æ–≥–æ–ª—è —É–º–∏—Ä–∞–µ—Ç –±–æ–ª–µ–µ 200 —á–µ–ª–æ–≤–µ–∫. –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å —Ä–∞–∑—Ä—É—à–∞–µ—Ç –Ω–µ —Ç–æ–ª—å–∫–æ —Ç–µ–ª–æ, –Ω–æ –∏
            –∂–∏–∑–Ω—å –±–ª–∏–∑–∫–∏—Ö. –ù–µ –∂–¥–∏—Ç–µ, –ø–æ–∫–∞ —Å—Ç–∞–Ω–µ—Ç –ø–æ–∑–¥–Ω–æ ‚Äî –≤—ã–∑–æ–≤–∏—Ç–µ –≤—Ä–∞—á–∞ –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Ü–µ–ø–æ—á–∫—É –ø–æ—Å–ª–µ–¥—Å—Ç–≤–∏–π —É–∂–µ —Å–µ–≥–æ–¥–Ω—è.
          </p>
        </div>
      </section>

      {/* How we help */}
      <section id="help" className="relative overflow-hidden px-4 py-20 lg:px-8">
        <div className="absolute inset-x-0 bottom-0 h-1/3 bg-gradient-to-t from-primary/20 to-transparent" aria-hidden />
        <div className="relative mx-auto max-w-7xl">
          <h2 className="mb-12 text-center font-display text-3xl font-bold text-text md:text-4xl">–ö–∞–∫ –º—ã –ø–æ–º–æ–≥–∞–µ–º</h2>
          <div className="grid gap-6 md:grid-cols-2 lg:grid-cols-4">
            {advantages.map((advantage, index) => (
              <motion.div
                key={advantage.title}
                className="rounded-2xl bg-white p-6 text-center shadow-soft"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
              >
                <div className="mb-4 text-5xl">{advantage.icon}</div>
                <h3 className="font-display text-lg font-semibold text-text">{advantage.title}</h3>
                <p className="mt-2 text-sm text-muted">{advantage.description}</p>
              </motion.div>
            ))}
          </div>
          <div className="mt-12 flex justify-center">
            <button
              type="button"
              onClick={() => setIsModalOpen(true)}
              className="inline-flex items-center justify-center rounded-full bg-primary px-8 py-4 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg hover:opacity-95"
            >
              –û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –ø–æ–¥–±–æ—Ä–∞ –ª–µ—á–µ–Ω–∏—è
            </button>
          </div>
        </div>
      </section>

      {/* Timeline */}
      <section className="bg-surface px-4 py-20 lg:px-8">
        <div className="mx-auto max-w-5xl">
          <h2 className="mb-16 text-center font-display text-3xl font-bold text-text md:text-4xl">–ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º</h2>
          <div className="relative">
            <div className="absolute left-8 top-0 hidden h-full w-0.5 bg-primary md:block" aria-hidden />
            <div className="space-y-8">
              {timeline.map((item, index) => (
                <motion.div
                  key={item.step}
                  className="relative flex flex-col gap-4 md:flex-row md:gap-6"
                  initial={{ opacity: 0, x: -24 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.15 }}
                >
                  <div className="flex h-16 w-16 flex-shrink-0 items-center justify-center self-start rounded-full bg-primary font-display text-2xl font-bold text-white shadow-primary-md">
                    {item.step}
                  </div>
                  <div className="flex-1 rounded-2xl bg-white p-6 shadow-soft">
                    <h3 className="font-display text-xl font-semibold text-text">{item.title}</h3>
                    <p className="mt-2 text-sm text-muted">{item.description}</p>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </div>
      </section>

      {/* Proof */}
      <section className="bg-white px-4 py-20 lg:px-8">
        <div className="mx-auto max-w-7xl">
          <h2 className="mb-12 text-center font-display text-3xl font-bold text-text md:text-4xl">
            –ü–æ—á–µ–º—É –Ω–∞–º –¥–æ–≤–µ—Ä—è—é—Ç
          </h2>
          <div className="grid gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-6">
            {proofItems.map((item, index) => (
              <motion.div
                key={item.title}
                className="rounded-2xl bg-elevated p-5 text-center shadow-soft"
                initial={{ opacity: 0, scale: 0.95 }}
                whileInView={{ opacity: 1, scale: 1 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.08 }}
              >
                <div className="mb-3 text-4xl">{item.icon}</div>
                <div className="font-display text-lg font-semibold text-text">{item.title}</div>
                <div className="mt-1 text-xs text-muted">{item.description}</div>
              </motion.div>
            ))}
          </div>
          <div className="mt-12 flex flex-col items-center justify-center gap-8 rounded-3xl bg-surface p-10 shadow-soft md:flex-row">
            <div className="text-center">
              <div className="mb-4 text-6xl">üìú</div>
              <h3 className="font-display text-xl font-semibold text-text">–õ–∏—Ü–µ–Ω–∑–∏—è –ú–∏–Ω–∑–¥—Ä–∞–≤–∞ –†–§</h3>
              <p className="mt-2 text-sm text-muted">–í—Å–µ –≤—Ä–∞—á–∏ –ø—Ä–æ—Ö–æ–¥—è—Ç –µ–∂–µ–≥–æ–¥–Ω—É—é –∞—Ç—Ç–µ—Å—Ç–∞—Ü–∏—é</p>
            </div>
            <div className="text-center">
              <div className="flex h-32 w-32 items-center justify-center rounded-2xl bg-white text-4xl shadow-soft">üì±</div>
              <p className="mt-2 text-xs text-muted">–û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ª–∏—Ü–µ–Ω–∑–∏–π</p>
            </div>
          </div>
        </div>
      </section>

      {/* Reviews */}
      <section id="reviews" className="bg-surface px-4 py-20 lg:px-8">
        <div className="mx-auto max-w-7xl">
          <h2 className="mb-12 text-center font-display text-3xl font-bold text-text md:text-4xl">–û—Ç–∑—ã–≤—ã –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤</h2>
          <div className="mb-10 flex flex-wrap items-center justify-center gap-3">
            {cityFilters.map((filter) => (
              <button
                key={filter}
                type="button"
                onClick={() => setCityFilter(filter)}
                className={`rounded-full border px-5 py-2 text-sm font-semibold transition-all ${
                  cityFilter === filter
                    ? "border-primary bg-primary text-white shadow-primary-sm"
                    : "border-primary/40 bg-white text-primary hover:bg-primary/20"
                }`}
              >
                {filter}
              </button>
            ))}
          </div>
          <Swiper
            modules={[Autoplay, Navigation, Pagination]}
            spaceBetween={24}
            slidesPerView={1}
            breakpoints={{
              640: { slidesPerView: 2 },
              1024: { slidesPerView: 3 },
            }}
            autoplay={{ delay: 5000, disableOnInteraction: false }}
            pagination={{ clickable: true }}
            navigation
            className="pb-12"
          >
            {filteredReviews.map((review) => (
              <SwiperSlide key={review.id}>
                <div className="flex h-full flex-col justify-between rounded-2xl bg-white p-6 shadow-soft">
                  <div>
                    <div className="mb-2 text-sm font-semibold text-primary">{review.city}</div>
                    <p className="text-sm text-muted">{review.text}</p>
                  </div>
                  <div className="mt-6 font-display text-base font-semibold text-text">{review.name}</div>
                </div>
              </SwiperSlide>
            ))}
          </Swiper>
        </div>
      </section>

      {/* CTA form #2 */}
      <section id="request" className="relative overflow-hidden px-4 py-20 lg:px-8">
        <div className="absolute inset-0 bg-gradient-to-br from-primary via-primary-700 to-primary/80" />
        <div className="relative mx-auto max-w-2xl">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            <h2 className="mb-4 text-center font-display text-3xl font-bold text-white md:text-4xl drop-shadow-lg">
              –ê–Ω–æ–Ω–∏–º–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è
            </h2>
            <p className="mb-8 text-center text-white/90 drop-shadow">–û—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω—É—Ç</p>
            <form onSubmit={handlePrimarySubmit} className="rounded-3xl bg-white p-8 shadow-2xl">
              <div className="space-y-4">
                <input
                  type="text"
                  name="name"
                  value={name}
                  onChange={(event) => setName(event.target.value)}
                  placeholder="–í–∞—à–µ –∏–º—è"
                  required
                  className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary-100"
                />
                <InputMask mask="+7 (999) 999-99-99" value={phone} onChange={(event) => setPhone(event.target.value)}>
                  {(inputProps: ComponentPropsWithoutRef<"input">) => (
                    <input
                      {...inputProps}
                      type="tel"
                      inputMode="tel"
                      placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                      required
                      className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary-100"
                    />
                  )}
                </InputMask>
                <button
                  type="submit"
                  className="w-full rounded-lg bg-primary px-6 py-4 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg hover:opacity-95"
                >
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                </button>
                <p className="text-center text-xs text-muted">
                  –ù–∞–∂–∏–º–∞—è –∫–Ω–æ–ø–∫—É, –≤—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
                </p>
                {primaryError && <p className="text-center text-sm text-red-500">{primaryError}</p>}
                {primaryMessage && <p className="text-center text-sm text-primary">{primaryMessage}</p>}
              </div>
            </form>
          </motion.div>
        </div>
      </section>

      {/* Guarantee */}
      <section className="relative overflow-hidden px-4 py-20 lg:px-8">
        <div className="absolute inset-0 bg-text" />
        <div className="absolute inset-0 bg-gradient-to-br from-primary/20 to-transparent" />
        <div className="relative mx-auto max-w-4xl text-center">
          <div className="mb-8 inline-block">
            <div className="animate-glow-tiffany rounded-full bg-primary/20 p-10">
              <div className="text-7xl">üîí</div>
            </div>
          </div>
          <h2 className="mb-6 font-display text-3xl font-bold text-white md:text-4xl">–ì–∞—Ä–∞–Ω—Ç–∏—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏</h2>
          <div className="mb-8 inline-flex items-center gap-3 rounded-full bg-primary px-6 py-3 shadow-primary-lg">
            <span className="text-2xl">‚úì</span>
            <span className="font-display text-lg font-semibold text-white">–ë–µ–∑ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ —É—á—ë—Ç</span>
          </div>
          <p className="mx-auto max-w-3xl text-lg text-white/80">
            –ú—ã —Ä–∞–±–æ—Ç–∞–µ–º —Å—Ç—Ä–æ–≥–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ. –î–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ –∑–∞—â–∏—â–µ–Ω—ã, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ª–µ—á–µ–Ω–∏–∏ –Ω–µ –ø–µ—Ä–µ–¥–∞—ë—Ç—Å—è –Ω–∞
            –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã –∏ —Å—Ç—Ä–∞—Ö–æ–≤—ã–µ –±–∞–∑—ã. –ú—ã –ø–æ–Ω–∏–º–∞–µ–º, –Ω–∞—Å–∫–æ–ª—å–∫–æ –≤–∞–∂–Ω–∞ —Ä–µ–ø—É—Ç–∞—Ü–∏—è –∏ —Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ –≤–∞—à–µ–π —Å–µ–º—å–∏.
          </p>
        </div>
      </section>

      {/* Contacts */}
      <section id="contacts" className="bg-white px-4 py-20 lg:px-8">
        <div className="mx-auto max-w-7xl">
          <h2 className="mb-12 text-center font-display text-3xl font-bold text-text md:text-4xl">–ö–æ–Ω—Ç–∞–∫—Ç—ã</h2>
          <div className="grid gap-10 lg:grid-cols-[0.8fr_1.2fr]">
            <div className="space-y-8">
              <div>
                <h3 className="mb-3 font-display text-2xl font-semibold text-text">–¢–µ–ª–µ—Ñ–æ–Ω</h3>
                <a
                  href="tel:+78000000000"
                  className="text-4xl font-bold text-primary transition-colors hover:text-primary-700"
                >
                  8 (800) 000-00-00
                </a>
                <p className="mt-2 text-sm text-muted">–ó–≤–æ–Ω–æ–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–æ –†–æ—Å—Å–∏–∏</p>
              </div>
              <div className="flex flex-wrap gap-4">
                <a
                  href="https://wa.me/78000000000"
                  className="flex flex-1 min-w-[160px] items-center justify-center gap-2 rounded-lg border-2 border-green-500 bg-green-50 px-4 py-3 font-semibold text-green-600 transition-all hover:bg-green-500 hover:text-white"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <span className="text-xl">üí¨</span>
                  WhatsApp
                </a>
                <a
                  href="https://t.me/yourusername"
                  className="flex flex-1 min-w-[160px] items-center justify-center gap-2 rounded-lg border-2 border-blue-500 bg-blue-50 px-4 py-3 font-semibold text-blue-600 transition-all hover:bg-blue-500 hover:text-white"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <span className="text-xl">‚úàÔ∏è</span>
                  Telegram
                </a>
              </div>
              <div className="rounded-2xl bg-primary/5 p-6">
                <h4 className="font-display text-lg font-semibold text-text">–ê–¥—Ä–µ—Å –∫–ª–∏–Ω–∏–∫–∏</h4>
                <p className="mt-2 text-sm text-muted">–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123</p>
                <a
                  href="https://yandex.ru/maps/?text=%D0%BD%D0%B0%D1%80%D0%BA%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F%20%D1%81%D0%BB%D1%83%D0%B6%D0%B1%D0%B0"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="mt-3 inline-flex items-center gap-2 font-semibold text-primary transition-colors hover:text-primary-700"
                >
                  <span>üìç</span>
                  –û—Ç–∫—Ä—ã—Ç—å –≤ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–µ
                </a>
              </div>
            </div>
            <div
              ref={mapRef}
              className="min-h-[360px] overflow-hidden rounded-2xl bg-elevated shadow-soft"
            >
              {mapVisible ? (
                <iframe
                  title="–ö–∞—Ä—Ç–∞ –ø—Ä–æ–µ–∑–¥–∞"
                  src="https://yandex.ru/map-widget/v1/?ll=37.620070%2C55.753630&z=11&mode=search&text=%D0%BD%D0%B0%D1%80%D0%BA%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F%20%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C"
                  loading="lazy"
                  className="h-full w-full border-0"
                  allowFullScreen
                />
              ) : (
                <div className="flex h-full w-full flex-col items-center justify-center gap-4 p-8 text-center">
                  <div className="text-6xl">üó∫Ô∏è</div>
                  <p className="text-sm text-muted">–ö–∞—Ä—Ç–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ –±–ª–æ–∫–∞</p>
                  <button
                    type="button"
                    onClick={() => setMapVisible(true)}
                    className="rounded-lg border border-primary px-4 py-2 text-sm font-semibold text-primary transition-all hover:bg-primary hover:text-white"
                  >
                    –ó–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ä—Ç—É
                  </button>
                </div>
              )}
            </div>
          </div>
        </div>
      </section>

      {/* Popup after 30 seconds */}
      {showPopup && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-overlay p-4">
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            className="relative w-full max-w-md rounded-3xl bg-white p-8 shadow-2xl"
          >
            <button
              type="button"
              onClick={() => {
                setShowPopup(false);
                setPopupError(null);
                setPopupMessage(null);
              }}
              className="absolute right-4 top-4 text-muted transition-colors hover:text-text"
              aria-label="–ó–∞–∫—Ä—ã—Ç—å"
            >
              <svg className="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5">
                <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            <h3 className="mb-3 font-display text-2xl font-bold text-text">–ù—É–∂–Ω–∞ —Å—Ä–æ—á–Ω–∞—è –ø–æ–º–æ—â—å?</h3>
            <p className="mb-6 text-sm text-muted">
              –û—Å—Ç–∞–≤—å—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω ‚Äî –º—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –∏ –ø–æ–¥—Å–∫–∞–∂–µ–º, –∫–∞–∫–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –ø—Ä–µ–¥–ø—Ä–∏–Ω—è—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.
            </p>
            <form onSubmit={handlePopupSubmit} className="space-y-4">
              <input
                type="text"
                name="popupName"
                value={namePopup}
                onChange={(event) => setNamePopup(event.target.value)}
                placeholder="–í–∞—à–µ –∏–º—è"
                required
                className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary-100"
              />
              <InputMask
                mask="+7 (999) 999-99-99"
                value={phonePopup}
                onChange={(event) => setPhonePopup(event.target.value)}
              >
                {(inputProps: ComponentPropsWithoutRef<"input">) => (
                  <input
                    {...inputProps}
                    type="tel"
                    inputMode="tel"
                    placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                    required
                    className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary-100"
                  />
                )}
              </InputMask>
              <button
                type="submit"
                className="w-full rounded-lg bg-primary px-6 py-3 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg"
              >
                –ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ
              </button>
              {popupError && <p className="text-center text-sm text-red-500">{popupError}</p>}
              {popupMessage && <p className="text-center text-sm text-primary">{popupMessage}</p>}
            </form>
          </motion.div>
        </div>
      )}

      {/* Timer banner */}
      {showTimer && (
        <motion.div
          initial={{ opacity: 0, y: 40 }}
          animate={{ opacity: 1, y: 0 }}
          className="fixed bottom-28 right-4 z-40 w-full max-w-xs rounded-2xl bg-primary p-5 text-white shadow-2xl md:bottom-8"
        >
          <button
            type="button"
            onClick={() => setShowTimer(false)}
            className="absolute right-3 top-3 text-white/80 transition-colors hover:text-white"
            aria-label="–ó–∞–∫—Ä—ã—Ç—å"
          >
            <svg className="h-4 w-4" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5">
              <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
          <div className="flex items-start gap-3">
            <div className="text-3xl">üöë</div>
            <div>
              <h4 className="font-display text-lg font-semibold">–ë—Ä–∏–≥–∞–¥–∞ –≥–æ—Ç–æ–≤–∞ –≤—ã–µ—Ö–∞—Ç—å</h4>
              <p className="mt-1 text-sm text-white/90">–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É ‚Äî –º—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω—É—Ç</p>
              <a
                href="#request"
                onClick={() => setShowTimer(false)}
                className="mt-3 inline-flex items-center justify-center rounded-lg bg-white px-4 py-2 text-sm font-semibold text-primary transition-colors hover:bg-gray-100"
              >
                –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </a>
            </div>
          </div>
        </motion.div>
      )}

      {/* Modal */}
      {isModalOpen && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-overlay p-4">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            className="relative w-full max-w-lg rounded-3xl bg-white p-8 shadow-2xl"
          >
            <button
              type="button"
              onClick={() => {
                setIsModalOpen(false);
                setModalError(null);
                setModalMessage(null);
              }}
              className="absolute right-4 top-4 text-muted transition-colors hover:text-text"
              aria-label="–ó–∞–∫—Ä—ã—Ç—å"
            >
              <svg className="h-5 w-5" viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="1.5">
                <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            <h3 className="mb-4 font-display text-2xl font-bold text-text">–ü–æ–¥–±–æ—Ä –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ª–µ—á–µ–Ω–∏—è</h3>
            <p className="mb-6 text-sm text-muted">
              –û—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–æ –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Äî –º—ã –ø–æ–¥–≥–æ—Ç–æ–≤–∏–º –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –ø–æ–º–æ—â–∏ –∏ –ø–æ–¥—Å–∫–∞–∂–µ–º, –∫–∞–∫–∏–µ –º–µ—Ä—ã –ø—Ä–∏–Ω—è—Ç—å
              –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å.
            </p>
            <ul className="mb-6 grid gap-2 text-sm text-muted">
              {modalBenefits.map((benefit) => (
                <li key={benefit} className="flex items-center gap-2">
                  <span className="text-lg text-primary">‚úì</span>
                  <span>{benefit}</span>
                </li>
              ))}
            </ul>
            <form onSubmit={handleModalSubmit} className="space-y-4">
              <input
                type="text"
                name="modalName"
                value={modalName}
                onChange={(event) => setModalName(event.target.value)}
                placeholder="–í–∞—à–µ –∏–º—è"
                required
                className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary-100"
              />
              <InputMask
                mask="+7 (999) 999-99-99"
                value={modalPhone}
                onChange={(event) => setModalPhone(event.target.value)}
              >
                {(inputProps: ComponentPropsWithoutRef<"input">) => (
                  <input
                    {...inputProps}
                    type="tel"
                    inputMode="tel"
                    placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                    required
                    className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary-100"
                  />
                )}
              </InputMask>
              <button
                type="submit"
                className="w-full rounded-lg bg-primary px-6 py-3 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg"
              >
                –ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω
              </button>
              {modalError && <p className="text-center text-sm text-red-500">{modalError}</p>}
              {modalMessage && <p className="text-center text-sm text-primary">{modalMessage}</p>}
            </form>
          </motion.div>
        </div>
      )}
    </>
  );
}
