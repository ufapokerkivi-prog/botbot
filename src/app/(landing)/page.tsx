"use client";

import { useState, useEffect, useMemo, useRef, useCallback } from "react";
import dynamic from "next/dynamic";
import { motion, useScroll, useTransform } from "framer-motion";
import CountUp from "react-countup";
import { IMaskInput } from "react-imask";
import { Swiper, SwiperSlide } from "swiper/react";
import { Autoplay, Navigation, Pagination } from "swiper/modules";
import { useForm, Controller } from "react-hook-form";
import { z } from "zod";
import { zodResolver } from "@hookform/resolvers/zod";
import "swiper/css";
import "swiper/css/navigation";
import "swiper/css/pagination";

const services = [
  {
    id: 1,
    title: "–í—ã–≤–æ–¥ –∏–∑ –∑–∞–ø–æ—è",
    price: "–æ—Ç 2,900 ‚ÇΩ",
    icon: "üíâ",
    description: "–ö–∞–ø–µ–ª—å–Ω–∏—Ü—ã, –¥–µ—Ç–æ–∫—Å–∏–∫–∞—Ü–∏—è –∏ –∫—Ä—É–≥–ª–æ—Å—É—Ç–æ—á–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å —Å–æ—Å—Ç–æ—è–Ω–∏—è.",
  },
  {
    id: 2,
    title: "–°–Ω—è—Ç–∏–µ –ø–æ—Ö–º–µ–ª—å—è",
    price: "–æ—Ç 2,000 ‚ÇΩ",
    icon: "üß™",
    description: "–ö–æ–º–ø–ª–µ–∫—Å –≤–∏—Ç–∞–º–∏–Ω–æ–≤, –ø–æ–¥–¥–µ—Ä–∂–∫–∞ —Å–µ—Ä–¥—Ü–∞ –∏ –Ω–µ—Ä–≤–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã.",
  },
  {
    id: 3,
    title: "–ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ",
    price: "–æ—Ç 4,900 ‚ÇΩ",
    icon: "üõ°Ô∏è",
    description: "–õ–∏—Ü–µ–Ω–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –º–µ—Ç–æ–¥–∏–∫–∏ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.",
  },
];

const supportHighlights = ["–ê–Ω–æ–Ω–∏–º–Ω–æ", "–í—ã–µ–∑–∂–∞–µ–º –Ω–∞ –¥–æ–º", "–ë—Ä–∏–≥–∞–¥–∞ –ø—Ä–∏–µ–¥–µ—Ç –∑–∞ 30 –º–∏–Ω—É—Ç"];

const helpFeatures = [
  { icon: "‚è±Ô∏è", title: "–ë—ã—Å—Ç—Ä—ã–π –≤—ã–µ–∑–¥ 24/7" },
  { icon: "üîí", title: "–ë–µ–∑ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ —É—á—ë—Ç" },
  { icon: "üíä", title: "–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã" },
  { icon: "üë®‚Äç‚öïÔ∏è", title: "–í—Ä–∞—á–∏ —Å–æ —Å—Ç–∞–∂–µ–º 10+ –ª–µ—Ç" },
];

const reviews = [
  {
    id: 1,
    city: "–ú–æ—Å–∫–≤–∞",
    name: "–ê–Ω–¥—Ä–µ–π",
    rating: 5,
    text: "–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ—Å—Ç—å! –ü—Ä–∏–µ—Ö–∞–ª–∏ –∑–∞ 25 –º–∏–Ω—É—Ç, —Ö–æ—Ç—è –æ–±–µ—â–∞–ª–∏ 30. –í—Ä–∞—á –≤–µ–∂–ª–∏–≤—ã–π, –≤—Å—ë –æ–±—ä—è—Å–Ω–∏–ª.",
  },
  {
    id: 2,
    city: "–°–ü–ë",
    name: "–ï–ª–µ–Ω–∞",
    rating: 5,
    text: "–û—á–µ–Ω—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–∞ –∑–∞ –¥–µ–ª–∏–∫–∞—Ç–Ω–æ—Å—Ç—å –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º. –ü–æ–º–æ–≥–ª–∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.",
  },
  {
    id: 3,
    city: "–ö–∞–∑–∞–Ω—å",
    name: "–ò–≥–æ—Ä—å",
    rating: 5,
    text: "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ. –†–µ–∫–æ–º–µ–Ω–¥—É—é!",
  },
  {
    id: 4,
    city: "–ú–æ—Å–∫–≤–∞",
    name: "–ú–∞—Ä–∏—è",
    rating: 5,
    text: "–ë—Ä–∏–≥–∞–¥–∞ –ø—Ä–∏–µ—Ö–∞–ª–∞ –Ω–æ—á—å—é, –≤—Å—ë –ø—Ä–æ—à–ª–æ –∞–Ω–æ–Ω–∏–º–Ω–æ –∏ —Å–ø–æ–∫–æ–π–Ω–æ. –¢–µ–ø–µ—Ä—å –¥–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–º.",
  },
  {
    id: 5,
    city: "–°–ü–ë",
    name: "–í–ª–∞–¥–∏–º–∏—Ä",
    rating: 5,
    text: "–û—Ç–ª–∏—á–Ω–∞—è —Å–ª—É–∂–±–∞! –û–±—ä—è—Å–Ω–∏–ª–∏ –∫–∞–∂–¥—ã–π —à–∞–≥ –ª–µ—á–µ–Ω–∏—è –∏ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–ª–∏ –ø–æ—Å–ª–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã.",
  },
  {
    id: 6,
    city: "–ö–∞–∑–∞–Ω—å",
    name: "–û–ª—å–≥–∞",
    rating: 5,
    text: "–í–∞–∂–Ω–æ –±—ã–ª–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å, –∏ –≤—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å –Ω–∞ 100%. –°–ø–∞—Å–∏–±–æ!",
  },
  {
    id: 7,
    city: "–ú–æ—Å–∫–≤–∞",
    name: "–°–µ—Ä–≥–µ–π",
    rating: 5,
    text: "–ü—Ä–∏–µ—Ö–∞–ª–∏ –±—ã—Å—Ç—Ä–æ, –ø—Ä–∏–≤–µ–∑–ª–∏ –≤—Å–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã. –°–æ—Å—Ç–æ—è–Ω–∏–µ —É–ª—É—á—à–∏–ª–æ—Å—å —É–∂–µ —á–µ—Ä–µ–∑ —á–∞—Å.",
  },
  {
    id: 8,
    city: "–°–ü–ë",
    name: "–ù–∞—Ç–∞–ª—å—è",
    rating: 5,
    text: "–û—á–µ–Ω—å —á—É—Ç–∫–∏–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—ã. –û—Ç–≤–µ—Ç–∏–ª–∏ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –ø–æ–º–æ–≥–ª–∏ –≤—Å–µ–π —Å–µ–º—å–µ —É—Å–ø–æ–∫–æ–∏—Ç—å—Å—è.",
  },
  {
    id: 9,
    city: "–ö–∞–∑–∞–Ω—å",
    name: "–î–º–∏—Ç—Ä–∏–π",
    rating: 5,
    text: "–ß—ë—Ç–∫–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è, –Ω–∏–∫–∞–∫–∏—Ö –∑–∞–¥–µ—Ä–∂–µ–∫. –ß—É–≤—Å—Ç–≤—É–µ—Ç—Å—è –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–∏–∑–º –∫–æ–º–∞–Ω–¥—ã.",
  },
  {
    id: 10,
    city: "–ú–æ—Å–∫–≤–∞",
    name: "–ê–Ω–Ω–∞",
    rating: 5,
    text: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7 ‚Äî —ç—Ç–æ –ø—Ä–∞–≤–¥–∞. –í—Ä–∞—á –±—ã–ª –Ω–∞ —Å–≤—è–∑–∏, –ø–æ–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –Ω–µ —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞–ª–æ—Å—å.",
  },
];

const trustProofItems = [
  { icon: "üöë", title: "–í—ã–µ–∑–¥ –∑–∞ 30 –º–∏–Ω—É—Ç" },
  { icon: "ü§´", title: "100% –∞–Ω–æ–Ω–∏–º–Ω–æ" },
  { icon: "üíä", title: "–°–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–ø–∞—Ä–∞—Ç—ã" },
  { icon: "üí∞", title: "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–µ–Ω—ã" },
  { icon: "üë®‚Äç‚öïÔ∏è", title: "–í—Ä–∞—á–∏ —Å –æ–ø—ã—Ç–æ–º 10+ –ª–µ—Ç" },
  { icon: "‚òéÔ∏è", title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7" },
];

const timelineSteps = [
  {
    step: "1",
    title: "–ó–∞—è–≤–∫–∞",
    description: "–û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –Ω–∞ —Å–∞–π—Ç–µ –∏–ª–∏ –ø–æ–∑–≤–æ–Ω–∏—Ç–µ –Ω–∞–º",
  },
  {
    step: "2",
    title: "–ó–≤–æ–Ω–æ–∫ –≤—Ä–∞—á–∞",
    description: "–í—Ä–∞—á —Å–≤—è–∑—ã–≤–∞–µ—Ç—Å—è, —á—Ç–æ–±—ã —É—Ç–æ—á–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–º–æ—â—å",
  },
  {
    step: "3",
    title: "–í—ã–µ–∑–¥ –∏ –ø–æ–º–æ—â—å",
    description: "–ë—Ä–∏–≥–∞–¥–∞ –ø—Ä–∏–µ–∑–∂–∞–µ—Ç –Ω–∞ –¥–æ–º –∏ –ø—Ä–æ–≤–æ–¥–∏—Ç –ø—Ä–æ—Ü–µ–¥—É—Ä—ã",
  },
  {
    step: "4",
    title: "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å",
    description: "–û—Å—Ç–∞—ë–º—Å—è –Ω–∞ —Å–≤—è–∑–∏ –∏ –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É–µ–º –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ",
  },
];

const modalBenefits = [
  "–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è",
  "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –∫–∞–ø–µ–ª—å–Ω–∏—Ü–∞–º –∏ –ø—Ä–µ–ø–∞—Ä–∞—Ç–∞–º",
  "–ö–æ–Ω—Ç—Ä–æ–ª—å —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–æ –ø–æ–ª–Ω–æ–≥–æ —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∏—è",
  "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –≤—Ä–∞—á–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤",
];

const cityFilters = ["–í—Å–µ", "–ú–æ—Å–∫–≤–∞", "–°–ü–ë", "–ö–∞–∑–∞–Ω—å"] as const;

const contactSchema = z.object({
  name: z.string().trim().min(1, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"),
  phone: z
    .string()
    .trim()
    .min(1, "–£–∫–∞–∂–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
    .refine((value) => normalizePhone(value).length === 11, "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–æ–º–µ—Ä –ø–æ–ª–Ω–æ—Å—Ç—å—é"),
});

type ContactFormValues = z.infer<typeof contactSchema>;

const DynamicDangerStats = dynamic(() => import("@/components/DangerStats"), {
  ssr: false,
});

const DynamicContactMap = dynamic(() => import("@/components/ContactMap"), {
  ssr: false,
});

function normalizePhone(value: string) {
  return value.replace(/\D/g, "");
}

export default function HomePage() {
  const [cityFilter, setCityFilter] = useState<(typeof cityFilters)[number]>("–í—Å–µ");
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [showPopup, setShowPopup] = useState(false);
  const [showTimer, setShowTimer] = useState(false);
  const [primaryMessage, setPrimaryMessage] = useState<string | null>(null);
  const [popupMessage, setPopupMessage] = useState<string | null>(null);
  const [modalMessage, setModalMessage] = useState<string | null>(null);
  const [cursorPosition, setCursorPosition] = useState({ x: 50, y: 50 });

  const heroImageRef = useRef<HTMLDivElement | null>(null);
  const inactivityTimerRef = useRef<ReturnType<typeof setTimeout> | null>(null);

  const requestForm = useForm<ContactFormValues>({
    resolver: zodResolver(contactSchema),
    defaultValues: { name: "", phone: "" },
  });

  const popupForm = useForm<ContactFormValues>({
    resolver: zodResolver(contactSchema),
    defaultValues: { name: "", phone: "" },
  });

  const modalForm = useForm<ContactFormValues>({
    resolver: zodResolver(contactSchema),
    defaultValues: { name: "", phone: "" },
  });

  const { scrollYProgress } = useScroll({
    target: heroImageRef,
    offset: ["start end", "end start"],
  });

  const heroParallax = useTransform(scrollYProgress, [0, 1], ["-12%", "12%"]);

  useEffect(() => {
    let animationFrame: number | null = null;
    const handleMouseMove = (event: MouseEvent) => {
      if (animationFrame) {
        cancelAnimationFrame(animationFrame);
      }
      animationFrame = requestAnimationFrame(() => {
        setCursorPosition({
          x: (event.clientX / window.innerWidth) * 100,
          y: (event.clientY / window.innerHeight) * 100,
        });
      });
    };

    window.addEventListener("mousemove", handleMouseMove);

    return () => {
      if (animationFrame) {
        cancelAnimationFrame(animationFrame);
      }
      window.removeEventListener("mousemove", handleMouseMove);
    };
  }, []);

  useEffect(() => {
    const popupTimer = setTimeout(() => setShowPopup(true), 30_000);
    return () => clearTimeout(popupTimer);
  }, []);

  const resetInactivityTimer = useCallback(() => {
    if (inactivityTimerRef.current) {
      clearTimeout(inactivityTimerRef.current);
    }
    setShowTimer(false);
    inactivityTimerRef.current = setTimeout(() => setShowTimer(true), 15 * 60 * 1000);
  }, []);

  useEffect(() => {
    const events: (keyof WindowEventMap)[] = ["mousemove", "keydown", "scroll", "touchstart"];

    const startTimer = () => {
      if (inactivityTimerRef.current) {
        clearTimeout(inactivityTimerRef.current);
      }
      inactivityTimerRef.current = setTimeout(() => setShowTimer(true), 15 * 60 * 1000);
    };

    events.forEach((event) => window.addEventListener(event, resetInactivityTimer));
    startTimer();

    return () => {
      events.forEach((event) => window.removeEventListener(event, resetInactivityTimer));
      if (inactivityTimerRef.current) {
        clearTimeout(inactivityTimerRef.current);
      }
    };
  }, [resetInactivityTimer]);

  const filteredReviews = useMemo(() => {
    if (cityFilter === "–í—Å–µ") {
      return reviews;
    }
    return reviews.filter((review) => review.city === cityFilter);
  }, [cityFilter]);

  const handleRequestSubmit = requestForm.handleSubmit(() => {
    setPrimaryMessage("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω—É—Ç.");
    requestForm.reset();
  });

  const handlePopupSubmit = popupForm.handleSubmit(() => {
    setPopupMessage("–ì–æ—Ç–æ–≤–æ! –í—Ä–∞—á –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 1 –º–∏–Ω—É—Ç—ã.");
    popupForm.reset();
  });

  const handleModalSubmit = modalForm.handleSubmit(() => {
    setModalMessage("–ü–ª–∞–Ω –ª–µ—á–µ–Ω–∏—è –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω! –ú—ã —Å–≤—è–∂–µ–º—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω—É—Ç.");
    modalForm.reset();
  });

  const closePopup = () => {
    setShowPopup(false);
    setPopupMessage(null);
    popupForm.reset();
  };

  const closeModal = () => {
    setIsModalOpen(false);
    setModalMessage(null);
    modalForm.reset();
  };

  return (
    <>
      <div
        aria-hidden
        className="pointer-events-none fixed inset-0 -z-10 opacity-90 transition-colors duration-500"
        style={{
          background: `radial-gradient(600px circle at ${cursorPosition.x}% ${cursorPosition.y}%, rgba(0, 200, 179, 0.12), transparent 75%)`,
        }}
      />

      <section
        id="hero"
        className="relative overflow-hidden px-4 pb-20 pt-24 md:pb-28 md:pt-28 lg:px-8"
      >
        <div className="absolute inset-0 -z-10">
          <div className="h-full w-full bg-gradient-to-br from-primary/5 via-primary/15 to-primary/5" />
          <div className="absolute inset-0 bg-gradient-to-br from-white via-primary/10 to-white" />
        </div>
        <div className="relative mx-auto flex max-w-7xl flex-col gap-12 lg:flex-row lg:items-center">
          <motion.div
            className="max-w-2xl"
            initial={{ opacity: 0, y: 24 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
          >
            <p className="mb-5 inline-flex items-center gap-2 rounded-full border border-primary/40 bg-white/80 px-4 py-2 text-sm font-semibold text-primary backdrop-blur">
              <span className="text-base">‚ö°</span>
              –î–µ–∂—É—Ä–Ω–∞—è –±—Ä–∏–≥–∞–¥–∞ –≥–æ—Ç–æ–≤–∞ –∫ –≤—ã–µ–∑–¥—É
            </p>
            <h1 className="mb-6 font-display text-4xl font-extrabold leading-tight text-text md:text-5xl lg:text-6xl">
              –í–´–ó–û–í –ù–ê–†–ö–û–õ–û–ì–ê –ù–ê –î–û–ú –ó–ê 30 –ú–ò–ù–£–¢ ‚Äî –ö–†–£–ì–õ–û–°–£–¢–û–ß–ù–û –ò –ê–ù–û–ù–ò–ú–ù–û
            </h1>
            <p className="mb-8 max-w-xl text-lg text-text md:text-xl">
              –í—ã–≤–æ–¥ –∏–∑ –∑–∞–ø–æ—è, —Å–Ω—è—Ç–∏–µ –ø–æ—Ö–º–µ–ª—å—è –∏ –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ. –ß–∞—Å—Ç–Ω–∞—è —Å–∫–æ—Ä–∞—è –ø–æ–º–æ—â—å 24/7
            </p>
            <div className="mb-8 flex flex-wrap gap-3">
              {supportHighlights.map((item) => (
                <span
                  key={item}
                  className="rounded-full bg-white/80 px-4 py-2 text-sm font-semibold text-text shadow-soft backdrop-blur"
                >
                  {item}
                </span>
              ))}
            </div>
            <div className="flex flex-col gap-4 sm:flex-row">
              <a
                href="tel:+78000000000"
                className="animate-pulse-soft inline-flex min-h-[52px] items-center justify-center rounded-lg bg-primary px-8 py-4 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/40"
              >
                –í—ã–∑–≤–∞—Ç—å –≤—Ä–∞—á–∞ —Å–µ–π—á–∞—Å
              </a>
              <button
                type="button"
                onClick={() => setIsModalOpen(true)}
                className="inline-flex min-h-[52px] items-center justify-center rounded-lg border-2 border-primary bg-white px-8 py-4 font-display text-base font-semibold text-primary transition-all hover:bg-primary hover:text-white hover:shadow-primary-sm focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/40"
              >
                –ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –±–µ—Å–ø–ª–∞—Ç–Ω–æ
              </button>
            </div>
            <div className="mt-10 grid gap-6 sm:grid-cols-3">
              <div className="rounded-2xl bg-white/85 p-5 text-center shadow-soft backdrop-blur">
                <div className="text-3xl font-bold text-primary">
                  <CountUp end={24} suffix="/7" duration={2.4} />
                </div>
                <p className="text-sm text-muted">–†–∞–±–æ—Ç–∞–µ–º –±–µ–∑ –≤—ã—Ö–æ–¥–Ω—ã—Ö</p>
              </div>
              <div className="rounded-2xl bg-white/85 p-5 text-center shadow-soft backdrop-blur">
                <div className="text-3xl font-bold text-primary">
                  <CountUp end={30} suffix=" –º–∏–Ω" duration={2.4} />
                </div>
                <p className="text-sm text-muted">–°—Ä–µ–¥–Ω–µ–µ –≤—Ä–µ–º—è –ø—Ä–∏–µ–∑–¥–∞</p>
              </div>
              <div className="rounded-2xl bg-white/85 p-5 text-center shadow-soft backdrop-blur">
                <div className="text-3xl font-bold text-primary">100%</div>
                <p className="text-sm text-muted">–ì–∞—Ä–∞–Ω—Ç–∏—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏</p>
              </div>
            </div>
          </motion.div>

          <motion.div
            ref={heroImageRef}
            style={{ y: heroParallax }}
            className="relative w-full max-w-xl self-center"
            initial={{ opacity: 0, scale: 0.94 }}
            animate={{ opacity: 1, scale: 1 }}
            transition={{ duration: 0.8, delay: 0.2 }}
          >
            <div
              className="absolute -left-10 -top-10 h-48 w-48 rounded-full bg-primary/15 blur-3xl"
              aria-hidden
            />
            <div
              className="absolute -right-8 -bottom-12 h-56 w-56 rounded-full bg-primary/20 blur-3xl"
              aria-hidden
            />
            <div className="relative overflow-hidden rounded-[36px] shadow-2xl">
              <div className="aspect-[3/4] w-full bg-gradient-to-br from-primary/25 via-primary/10 to-primary/5" />
              <div className="absolute inset-0 bg-gradient-to-t from-text/70 via-transparent to-transparent" />
              <div className="absolute bottom-6 left-6 right-6 rounded-2xl bg-white/85 p-4 shadow-soft backdrop-blur">
                <p className="font-display text-lg font-semibold text-text">
                  –ö–æ–º–∞–Ω–¥–∞ —É–∂–µ –≥–æ—Ç–æ–≤–∏—Ç—Å—è –∫ –≤—ã–µ–∑–¥—É
                </p>
                <p className="text-sm text-muted">–ú—ã –±—É–¥–µ–º —É –≤–∞—Å —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç –ø–æ—Å–ª–µ –∑–∞—è–≤–∫–∏</p>
              </div>
            </div>
          </motion.div>
        </div>
      </section>

      <section id="services" className="bg-white px-4 py-20 lg:px-8">
        <div className="mx-auto max-w-7xl">
          <motion.h2
            className="mb-12 text-center font-display text-3xl font-bold text-text md:text-4xl"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            –ù–∞—à–∏ —É—Å–ª—É–≥–∏
          </motion.h2>
          <div className="hidden gap-6 md:grid md:grid-cols-3">
            {services.map((service, index) => (
              <motion.div
                key={service.id}
                className="group flex h-full flex-col rounded-2xl bg-elevated p-6 shadow-soft transition-all duration-300 hover:-translate-y-2 hover:shadow-primary-md"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
              >
                <div className="mb-5 flex h-16 w-16 items-center justify-center rounded-xl bg-primary/10 text-4xl transition-all duration-300 group-hover:scale-110 group-hover:bg-primary group-hover:text-white">
                  {service.icon}
                </div>
                <h3 className="mb-2 font-display text-xl font-semibold text-text">
                  {service.title}
                </h3>
                <p className="mb-4 text-2xl font-bold text-primary">{service.price}</p>
                <p className="text-sm text-muted">{service.description}</p>
              </motion.div>
            ))}
          </div>

          <div className="md:hidden">
            <Swiper
              modules={[Pagination]}
              slidesPerView={1}
              spaceBetween={20}
              pagination={{ clickable: true }}
              className="pb-12"
            >
              {services.map((service) => (
                <SwiperSlide key={service.id}>
                  <div className="h-full rounded-2xl bg-elevated p-6 shadow-soft">
                    <div className="mb-5 flex h-16 w-16 items-center justify-center rounded-xl bg-primary/10 text-4xl">
                      {service.icon}
                    </div>
                    <h3 className="mb-2 font-display text-xl font-semibold text-text">
                      {service.title}
                    </h3>
                    <p className="mb-4 text-2xl font-bold text-primary">{service.price}</p>
                    <p className="text-sm text-muted">{service.description}</p>
                  </div>
                </SwiperSlide>
              ))}
            </Swiper>
          </div>
        </div>
      </section>

      <DynamicDangerStats />

      <section id="help" className="relative overflow-hidden px-4 py-20 lg:px-8">
        <div className="absolute inset-0 -z-10 bg-gradient-to-b from-white via-primary/10 to-white" />
        <div className="relative mx-auto max-w-7xl rounded-3xl bg-white/85 p-10 shadow-soft backdrop-blur">
          <motion.h2
            className="text-center font-display text-3xl font-bold text-text md:text-4xl"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            –í—ã—Ö–æ–¥ –µ—Å—Ç—å. –ú—ã –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ –∏ —Ç—Ä–µ–∑–≤–æ—Å—Ç—å –∑–∞ 1 –¥–µ–Ω—å.
          </motion.h2>
          <p className="mx-auto mt-4 max-w-3xl text-center text-base text-muted">
            –ö–æ–º–∞–Ω–¥–∞ –≤—Ä–∞—á–µ–π-–Ω–∞—Ä–∫–æ–ª–æ–≥–æ–≤ –∏ —Ä–µ–∞–Ω–∏–º–∞—Ç–æ–ª–æ–≥–æ–≤ –ø—Ä–∏–µ–∑–∂–∞–µ—Ç —Å –ø–æ–ª–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤ –∏
            –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã —Å—Ç–∞–±–∏–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –æ–±–µ—Å–ø–µ—á–∏—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –ø–∞—Ü–∏–µ–Ω—Ç—É –∏ –µ–≥–æ
            –±–ª–∏–∑–∫–∏–º.
          </p>
          <div className="mt-12 grid gap-6 md:grid-cols-2 lg:grid-cols-4">
            {helpFeatures.map((feature, index) => (
              <motion.div
                key={feature.title}
                className="rounded-2xl bg-elevated p-6 text-center shadow-soft"
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
              >
                <div className="mb-4 text-4xl">{feature.icon}</div>
                <h3 className="font-display text-lg font-semibold text-text">{feature.title}</h3>
              </motion.div>
            ))}
          </div>
          <div className="mt-12 flex justify-center">
            <button
              type="button"
              onClick={() => setIsModalOpen(true)}
              className="inline-flex items-center justify-center rounded-full bg-primary px-8 py-4 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/40"
            >
              –û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –ø–æ–¥–±–æ—Ä–∞ –ª–µ—á–µ–Ω–∏—è
            </button>
          </div>
        </div>
      </section>

      <section id="reviews" className="bg-surface px-4 py-20 lg:px-8">
        <div className="mx-auto max-w-7xl">
          <motion.h2
            className="mb-12 text-center font-display text-3xl font-bold text-text md:text-4xl"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            –û—Ç–∑—ã–≤—ã –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤
          </motion.h2>
          <div className="mb-10 flex flex-wrap items-center justify-center gap-3">
            {cityFilters.map((filter) => (
              <button
                key={filter}
                type="button"
                onClick={() => setCityFilter(filter)}
                className={`rounded-full border px-5 py-2 text-sm font-semibold transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/40 ${
                  cityFilter === filter
                    ? "border-primary bg-primary text-white shadow-primary-sm"
                    : "border-primary/40 bg-white text-primary hover:bg-primary/10"
                }`}
              >
                {filter}
              </button>
            ))}
          </div>
          <Swiper
            modules={[Autoplay, Navigation, Pagination]}
            spaceBetween={24}
            slidesPerView={1}
            breakpoints={{
              640: { slidesPerView: 2 },
              1024: { slidesPerView: 3 },
            }}
            autoplay={{ delay: 5000, disableOnInteraction: false }}
            pagination={{ clickable: true }}
            navigation
            className="pb-12"
          >
            {filteredReviews.map((review) => (
              <SwiperSlide key={review.id}>
                <div className="flex h-full flex-col justify-between rounded-2xl bg-white p-6 shadow-soft">
                  <div>
                    <div className="mb-2 text-sm font-semibold text-primary">{review.city}</div>
                    <p className="mb-4 text-sm text-muted">{review.text}</p>
                  </div>
                  <div>
                    <div
                      className="mb-2 flex items-center gap-1 text-primary"
                      aria-label={`–û—Ü–µ–Ω–∫–∞ ${review.rating} –∏–∑ 5`}
                    >
                      {Array.from({ length: review.rating }).map((_, starIndex) => (
                        <span key={starIndex}>‚≠ê</span>
                      ))}
                    </div>
                    <div className="font-display text-base font-semibold text-text">
                      {review.name}
                    </div>
                  </div>
                </div>
              </SwiperSlide>
            ))}
          </Swiper>
        </div>
      </section>

      <section className="bg-white px-4 py-20 lg:px-8">
        <div className="mx-auto max-w-7xl">
          <motion.h2
            className="mb-12 text-center font-display text-3xl font-bold text-text md:text-4xl"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            –ü–æ—á–µ–º—É –Ω–∞–º –¥–æ–≤–µ—Ä—è—é—Ç
          </motion.h2>
          <div className="grid gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-6">
            {trustProofItems.map((item, index) => (
              <motion.div
                key={item.title}
                className="rounded-2xl bg-elevated p-5 text-center shadow-soft"
                initial={{ opacity: 0, scale: 0.95 }}
                whileInView={{ opacity: 1, scale: 1 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.08 }}
              >
                <div className="mb-3 text-4xl">{item.icon}</div>
                <div className="font-display text-lg font-semibold text-text">{item.title}</div>
              </motion.div>
            ))}
          </div>
          <div className="mt-12 flex flex-col items-center justify-center gap-8 rounded-3xl bg-surface p-10 shadow-soft md:flex-row">
            <div className="text-center">
              <div className="mb-4 text-6xl">üìú</div>
              <h3 className="font-display text-xl font-semibold text-text">
                –õ–∏—Ü–µ–Ω–∑–∏—è –ú–∏–Ω–∑–¥—Ä–∞–≤–∞ –†–§
              </h3>
              <p className="mt-2 text-sm text-muted">
                –†–∞–±–æ—Ç–∞–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ –∏ —Å–æ–±–ª—é–¥–∞–µ–º –≤—Å–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –ª–µ—á–µ–Ω–∏—è
              </p>
            </div>
            <div className="text-center">
              <div className="flex h-32 w-32 items-center justify-center rounded-2xl bg-white text-4xl shadow-soft">
                üì±
              </div>
              <p className="mt-2 text-xs text-muted">
                –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥, —á—Ç–æ–±—ã –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ª–∏–Ω–Ω–æ—Å—Ç—å –ª–∏—Ü–µ–Ω–∑–∏–∏
              </p>
            </div>
          </div>
        </div>
      </section>

      <section id="request" className="relative overflow-hidden px-4 py-20 lg:px-8">
        <div className="absolute inset-0 bg-gradient-to-br from-primary via-primary/80 to-primary-700" />
        <div className="relative mx-auto max-w-2xl">
          <motion.div
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            <h2 className="mb-4 text-center font-display text-3xl font-bold text-white md:text-4xl drop-shadow">
              –ù–µ —Ä–∏—Å–∫—É–π—Ç–µ –∑–¥–æ—Ä–æ–≤—å–µ–º! –û—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å ‚Äî –≤—Ä–∞—á —É–∂–µ –≥–æ—Ç–æ–≤ –≤—ã–µ—Ö–∞—Ç—å.
            </h2>
            <p className="mb-8 text-center text-white/90">–ê–Ω–æ–Ω–∏–º–Ω–æ. –û—Ç–≤–µ—Ç–∏–º –≤ —Ç–µ—á–µ–Ω–∏–µ 3 –º–∏–Ω—É—Ç.</p>
            <form onSubmit={handleRequestSubmit} className="rounded-3xl bg-white p-8 shadow-2xl">
              <div className="space-y-4">
                <div>
                  <input
                    {...requestForm.register("name")}
                    type="text"
                    aria-invalid={Boolean(requestForm.formState.errors.name)}
                    placeholder="–í–∞—à–µ –∏–º—è"
                    className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary/20"
                  />
                  {requestForm.formState.errors.name && (
                    <p className="mt-2 text-sm text-red-500">
                      {requestForm.formState.errors.name.message}
                    </p>
                  )}
                </div>
                <div>
                  <Controller
                    name="phone"
                    control={requestForm.control}
                    render={({ field }) => (
                      <IMaskInput
                        mask="+7 (000) 000-00-00"
                        value={field.value ?? ""}
                        onAccept={(value: string | undefined) => field.onChange(value ?? "")}
                        onBlur={field.onBlur}
                        inputRef={field.ref}
                        type="tel"
                        inputMode="tel"
                        autoComplete="tel"
                        placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                        className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary/20"
                        aria-invalid={Boolean(requestForm.formState.errors.phone)}
                      />
                    )}
                  />
                  {requestForm.formState.errors.phone && (
                    <p className="mt-2 text-sm text-red-500">
                      {requestForm.formState.errors.phone.message}
                    </p>
                  )}
                </div>
                <button
                  type="submit"
                  className="animate-vibrate w-full rounded-lg bg-primary px-6 py-4 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/40"
                >
                  –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
                </button>
                {primaryMessage && (
                  <p className="text-center text-sm text-primary">{primaryMessage}</p>
                )}
              </div>
            </form>
          </motion.div>
        </div>
      </section>

      <section id="contacts" className="bg-white px-4 py-20 lg:px-8">
        <div className="mx-auto max-w-7xl">
          <motion.h2
            className="mb-12 text-center font-display text-3xl font-bold text-text md:text-4xl"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            –ö–æ–Ω—Ç–∞–∫—Ç—ã
          </motion.h2>
          <div className="grid gap-10 lg:grid-cols-[0.8fr_1.2fr]">
            <div className="space-y-8">
              <div>
                <h3 className="mb-3 font-display text-2xl font-semibold text-text">–¢–µ–ª–µ—Ñ–æ–Ω</h3>
                <a
                  href="tel:+78000000000"
                  className="text-4xl font-bold text-primary transition-colors hover:text-primary-700"
                >
                  8 (800) 000-00-00
                </a>
                <p className="mt-2 text-sm text-muted">–ó–≤–æ–Ω–æ–∫ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –ø–æ –†–æ—Å—Å–∏–∏</p>
              </div>
              <div className="flex flex-wrap gap-4">
                <a
                  href="https://wa.me/78000000000"
                  className="flex min-w-[160px] flex-1 items-center justify-center gap-2 rounded-lg border-2 border-green-500 bg-green-50 px-4 py-3 font-semibold text-green-600 transition-all hover:bg-green-500 hover:text-white"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <span className="text-xl">üí¨</span>
                  WhatsApp
                </a>
                <a
                  href="https://t.me/yourusername"
                  className="flex min-w-[160px] flex-1 items-center justify-center gap-2 rounded-lg border-2 border-blue-500 bg-blue-50 px-4 py-3 font-semibold text-blue-600 transition-all hover:bg-blue-500 hover:text-white"
                  target="_blank"
                  rel="noopener noreferrer"
                >
                  <span className="text-xl">‚úàÔ∏è</span>
                  Telegram
                </a>
              </div>
              <div className="rounded-2xl bg-primary/5 p-6">
                <h4 className="font-display text-lg font-semibold text-text">–ê–¥—Ä–µ—Å –∫–ª–∏–Ω–∏–∫–∏</h4>
                <p className="mt-2 text-sm text-muted">–≥. –ú–æ—Å–∫–≤–∞, —É–ª. –ü—Ä–∏–º–µ—Ä–Ω–∞—è, –¥. 123</p>
                <a
                  href="https://yandex.ru/maps/?text=%D0%BD%D0%B0%D1%80%D0%BA%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B0%D1%8F%20%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D1%8C"
                  target="_blank"
                  rel="noopener noreferrer"
                  className="mt-3 inline-flex items-center gap-2 font-semibold text-primary transition-colors hover:text-primary-700"
                >
                  <span>üìç</span>
                  –û—Ç–∫—Ä—ã—Ç—å –≤ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–µ
                </a>
              </div>
            </div>
            <DynamicContactMap />
          </div>
        </div>
      </section>

      <section className="bg-surface px-4 py-20 lg:px-8">
        <div className="mx-auto max-w-5xl">
          <motion.h2
            className="mb-16 text-center font-display text-3xl font-bold text-text md:text-4xl"
            initial={{ opacity: 0, y: 20 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
          >
            –ö–∞–∫ –º—ã —Ä–∞–±–æ—Ç–∞–µ–º
          </motion.h2>
          <div className="relative">
            <div
              className="absolute left-8 top-0 hidden h-full w-0.5 bg-primary md:block"
              aria-hidden
            />
            <div className="space-y-8">
              {timelineSteps.map((item, index) => (
                <motion.div
                  key={item.step}
                  className="relative flex flex-col gap-4 md:flex-row md:gap-6"
                  initial={{ opacity: 0, x: -24 }}
                  whileInView={{ opacity: 1, x: 0 }}
                  viewport={{ once: true }}
                  transition={{ delay: index * 0.15 }}
                >
                  <div className="flex h-16 w-16 flex-shrink-0 items-center justify-center self-start rounded-full bg-primary font-display text-2xl font-bold text-white shadow-primary-md">
                    {item.step}
                  </div>
                  <div className="flex-1 rounded-2xl bg-white p-6 shadow-soft">
                    <h3 className="font-display text-xl font-semibold text-text">{item.title}</h3>
                    <p className="mt-2 text-sm text-muted">{item.description}</p>
                  </div>
                </motion.div>
              ))}
            </div>
          </div>
        </div>
      </section>

      <section className="relative overflow-hidden px-4 py-20 lg:px-8">
        <div className="absolute inset-0 bg-text" />
        <div className="absolute inset-0 bg-gradient-to-br from-primary/20 to-transparent" />
        <div className="relative mx-auto max-w-4xl text-center text-white">
          <div className="mb-8 inline-block">
            <div className="animate-glow-tiffany rounded-full bg-primary/25 p-10">
              <div className="text-7xl">üîí</div>
            </div>
          </div>
          <h2 className="mb-6 font-display text-3xl font-bold text-white md:text-4xl">
            –ì–∞—Ä–∞–Ω—Ç–∏—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏
          </h2>
          <div className="mb-8 inline-flex items-center gap-3 rounded-full bg-primary px-6 py-3 shadow-primary-lg">
            <span className="text-2xl">‚úì</span>
            <span className="font-display text-lg font-semibold text-white">
              –ë–µ–∑ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞ —É—á—ë—Ç
            </span>
          </div>
          <p className="mx-auto max-w-3xl text-lg text-white/85">
            –ú—ã –∑–∞—â–∏—â–∞–µ–º –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ. –ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å ‚Äî –Ω–∞—à –≥–ª–∞–≤–Ω—ã–π –ø—Ä–∏–Ω—Ü–∏–ø.
          </p>
        </div>
      </section>

      {showPopup && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-overlay p-4">
          <motion.div
            initial={{ opacity: 0, scale: 0.9 }}
            animate={{ opacity: 1, scale: 1 }}
            className="relative w-full max-w-md rounded-3xl bg-white p-8 shadow-2xl"
          >
            <button
              type="button"
              onClick={closePopup}
              className="absolute right-4 top-4 text-muted transition-colors hover:text-text"
              aria-label="–ó–∞–∫—Ä—ã—Ç—å"
            >
              <svg
                className="h-5 w-5"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="1.5"
              >
                <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            <h3 className="mb-3 font-display text-2xl font-bold text-text">
              –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å? –û—Å—Ç–∞–≤—å—Ç–µ –Ω–æ–º–µ—Ä, –≤—Ä–∞—á –ø–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç –∑–∞ 1 –º–∏–Ω—É—Ç—É
            </h3>
            <p className="mb-6 text-sm text-muted">
              –ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É ‚Äî –º—ã –≥–æ—Ç–æ–≤—ã –ø–æ–¥—Å–∫–∞–∑–∞—Ç—å, —á—Ç–æ –¥–µ–ª–∞—Ç—å –≤ –ø–µ—Ä–≤—ã–µ –º–∏–Ω—É—Ç—ã.
            </p>
            <form onSubmit={handlePopupSubmit} className="space-y-4">
              <div>
                <input
                  {...popupForm.register("name")}
                  type="text"
                  aria-invalid={Boolean(popupForm.formState.errors.name)}
                  placeholder="–í–∞—à–µ –∏–º—è"
                  className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary/20"
                />
                {popupForm.formState.errors.name && (
                  <p className="mt-2 text-sm text-red-500">
                    {popupForm.formState.errors.name.message}
                  </p>
                )}
              </div>
              <div>
                <Controller
                  name="phone"
                  control={popupForm.control}
                  render={({ field }) => (
                    <IMaskInput
                      mask="+7 (000) 000-00-00"
                      value={field.value ?? ""}
                      onAccept={(value: string | undefined) => field.onChange(value ?? "")}
                      onBlur={field.onBlur}
                      inputRef={field.ref}
                      type="tel"
                      inputMode="tel"
                      autoComplete="tel"
                      placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                      className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary/20"
                      aria-invalid={Boolean(popupForm.formState.errors.phone)}
                    />
                  )}
                />
                {popupForm.formState.errors.phone && (
                  <p className="mt-2 text-sm text-red-500">
                    {popupForm.formState.errors.phone.message}
                  </p>
                )}
              </div>
              <button
                type="submit"
                className="w-full rounded-lg bg-primary px-6 py-3 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/40"
              >
                –ü–µ—Ä–µ–∑–≤–æ–Ω–∏—Ç–µ –º–Ω–µ
              </button>
              {popupMessage && <p className="text-center text-sm text-primary">{popupMessage}</p>}
            </form>
          </motion.div>
        </div>
      )}

      {showTimer && (
        <motion.div
          initial={{ opacity: 0, y: 40 }}
          animate={{ opacity: 1, y: 0 }}
          className="fixed bottom-28 right-4 z-40 w-full max-w-xs rounded-2xl bg-primary p-5 text-white shadow-2xl md:bottom-8"
        >
          <button
            type="button"
            onClick={() => setShowTimer(false)}
            className="absolute right-3 top-3 text-white/80 transition-colors hover:text-white"
            aria-label="–ó–∞–∫—Ä—ã—Ç—å"
          >
            <svg
              className="h-4 w-4"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              strokeWidth="1.5"
            >
              <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
            </svg>
          </button>
          <div className="flex items-start gap-3">
            <div className="text-3xl">üöë</div>
            <div>
              <h4 className="font-display text-lg font-semibold">
                –ë—Ä–∏–≥–∞–¥–∞ –≥–æ—Ç–æ–≤–∞ –≤—ã–µ—Ö–∞—Ç—å —á–µ—Ä–µ–∑ 15 –º–∏–Ω—É—Ç ‚Äî –æ—Å—Ç–∞–≤—å—Ç–µ –∑–∞—è–≤–∫—É!
              </h4>
              <a
                href="#request"
                onClick={() => setShowTimer(false)}
                className="mt-3 inline-flex items-center justify-center rounded-lg bg-white px-4 py-2 text-sm font-semibold text-primary transition-colors hover:bg-gray-100"
              >
                –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
              </a>
            </div>
          </div>
        </motion.div>
      )}

      {isModalOpen && (
        <div className="fixed inset-0 z-50 flex items-center justify-center bg-overlay p-4">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            className="relative w-full max-w-lg rounded-3xl bg-white p-8 shadow-2xl"
          >
            <button
              type="button"
              onClick={closeModal}
              className="absolute right-4 top-4 text-muted transition-colors hover:text-text"
              aria-label="–ó–∞–∫—Ä—ã—Ç—å"
            >
              <svg
                className="h-5 w-5"
                viewBox="0 0 24 24"
                fill="none"
                stroke="currentColor"
                strokeWidth="1.5"
              >
                <path strokeLinecap="round" strokeLinejoin="round" d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
            <h3 className="mb-4 font-display text-2xl font-bold text-text">
              –ü–æ–¥–±–æ—Ä –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ–≥–æ –ª–µ—á–µ–Ω–∏—è
            </h3>
            <p className="mb-6 text-sm text-muted">
              –†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–∏—Ç—É–∞—Ü–∏–∏ ‚Äî –≤—Ä–∞—á –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω –∏ —Ä–∞—Å—Å–∫–∞–∂–µ—Ç, –∫–∞–∫–∏–µ —à–∞–≥–∏
              –≤–∞–∂–Ω—ã –≤ –ø–µ—Ä–≤—É—é –æ—á–µ—Ä–µ–¥—å.
            </p>
            <ul className="mb-6 grid gap-2 text-sm text-muted">
              {modalBenefits.map((benefit) => (
                <li key={benefit} className="flex items-center gap-2">
                  <span className="text-lg text-primary">‚úì</span>
                  <span>{benefit}</span>
                </li>
              ))}
            </ul>
            <form onSubmit={handleModalSubmit} className="space-y-4">
              <div>
                <input
                  {...modalForm.register("name")}
                  type="text"
                  aria-invalid={Boolean(modalForm.formState.errors.name)}
                  placeholder="–í–∞—à–µ –∏–º—è"
                  className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary/20"
                />
                {modalForm.formState.errors.name && (
                  <p className="mt-2 text-sm text-red-500">
                    {modalForm.formState.errors.name.message}
                  </p>
                )}
              </div>
              <div>
                <Controller
                  name="phone"
                  control={modalForm.control}
                  render={({ field }) => (
                    <IMaskInput
                      mask="+7 (000) 000-00-00"
                      value={field.value ?? ""}
                      onAccept={(value: string | undefined) => field.onChange(value ?? "")}
                      onBlur={field.onBlur}
                      inputRef={field.ref}
                      type="tel"
                      inputMode="tel"
                      autoComplete="tel"
                      placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
                      className="w-full rounded-lg border border-border px-4 py-3 text-text transition-all focus:border-primary focus:outline-none focus:ring-2 focus:ring-primary/20"
                      aria-invalid={Boolean(modalForm.formState.errors.phone)}
                    />
                  )}
                />
                {modalForm.formState.errors.phone && (
                  <p className="mt-2 text-sm text-red-500">
                    {modalForm.formState.errors.phone.message}
                  </p>
                )}
              </div>
              <button
                type="submit"
                className="w-full rounded-lg bg-primary px-6 py-3 font-display text-base font-semibold text-white shadow-primary-md transition-all hover:shadow-primary-lg focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary/40"
              >
                –ü–æ–ª—É—á–∏—Ç—å –ø–ª–∞–Ω
              </button>
              {modalMessage && <p className="text-center text-sm text-primary">{modalMessage}</p>}
            </form>
          </motion.div>
        </div>
      )}
    </>
  );
}
